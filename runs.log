doit_model   only mod time
doit_spec    force initial, since we cant do transfer on final


document options:

-s                same as -si, -so
-si               use spectral input
-so               use spectral output
-smax gmax        set wave max for spectral output
                  default: dealias wave max?

options used by 'convert' program:
-cout  uvw         output highres u,v,w        
-cout  vor         output highres vor1,2,3     
-cout  vorm        output highres ||vor||        (can not be used with -uo)



run 2048 grid: -mio -uo -cout vor              UDM vor file
run 2048 grid: -mio -so -smax 384 -cout uvw    spectral uvw file
run on 384:    -si -cout vorm                   input spec 384 uvw, output 384 vorm


*.vor.h5  BOB/UDM 2048^3
*.vorm    384^3 vor. mag. for dx.


test1 32:  restart from reference (27 coeff), save 22 coeff.
test2 32:  restart from test1
test3 32:  restart from test1, value diffusion.   t=0:

time=  0.00000(     0)  next output=*********  LSF minutes left:    -1. 0       
for next timestep: delt=0.0069861 cfl_adv= 1.500 cfl_vis= 0.080                 
max: (u,v,w)      3.07340785717600     3.69418112148746     3.43868098933755    
<z-vor>=-0.10408E-14   <hel>=-0.29407E+01   max(vor) 0.66968E+02                
R_lambda=    40.52374  R=   269.54178 lambda=     0.15005                       
mesh spacing/eta:        2.6091       2.6091       2.6091                       
2/3 dealiasing kmax*eta:        0.1278                                          
eddy turnover time:        1.2137                                               
ke:  1.5058723054  enstropy:      668.8337         total d/dt(ke):   0.0000000  
d/dt(ke) vis=  -2.4813730 f=   0.0000000 alpha=   0.0000000 total=  -2.4813730  
writing output files at t=    0.0000              


test4 30:  restart from test1   same restart as test3?  yes
test5 48:  restart from test1   same restart as test3?  yes


reference tests: run makeref and test again.  (that will test 
new output routines?)


big test: take 512^3 data, output 384 spec. 
          read in 384 spec, output 384 grid vorm.
          run dx.  
























**********************************************************************************
10/31/02
QB pre-science run.

.4020:  last non-rescaled run.
        rescale run started from this time.  
.4027:  rescaled run, after 1 timestep 


1. initial value: restart + rescale.  call daniel to talk about this
       decay2048_e   initial condition
       decay2048_s   rescale the initial condition



50MB/s:  180GB:   61m to write data.  run 6 hours, write data?
500MB/s:           6m to write data.  output every 2 hours = 50h  
         diagnostics:   every 25 timesteps?


UDM benchmarks:
1024^3.  serial 24GB. (1 rail)   t=30.34

1024^3.  UDM 24GB. (1 rail)   t=9.63:   43MB/s.   
1024^3.  UDM 24GB. (1 rail)   t=13.67   
1024^3.  UDM 24GB. (2 rail)   t=8.96
1024^3.  UDM 24GB. (2 rail)   t=8.89   on QA

16  stripe, pMPI:  140
64  stripe, pMPI:   46
128 stripe, pMPI:   39



2048^3
1 1 1024
1 1 1024 with rail option: UDM 192GB output: t=83.32:  39MB/s
1 1 1024 with rail option: UDM 192GB INPUT:  IN



dai
hal 
ggriter
jnunjez


32  stride          203  
64  stripe, pMPI:   436
128 stripe:         288




2. UDM: test on qidse:
     run test suite with my code w/parallel UDM restart: 
            ../testing/test3d.sh pudm
            works!  tried it with 3 different restart.h5 files,
            created with 3 different parallel decomposisitons

test using 512^3 restart data on QB
1x1x256 decomposisiton
run code 10 timesteps,  restart and run another 10 timesteps
run code 10 timesteps,  restart and run another 10 timesteps
  /scratch1/taylorm/udmtest/restart.*


data:  
serial:  3*1080057920/(5.04*60)/1024/1024 = 10.2
udm:     3221315704./(1.05*60)/1024/1024  = 49
CPU times (min):   (avg/max)
initialization:      0.55     0.55                                              
dns_solve:           7.13     7.13  per timestep:    0.71284   0.71284          
   time_control            5.04     5.04                                        
   RHS                     1.41     1.43                                        
   transpose_to_z          1.23     2.01                                        
   transpose_from_z        0.84     0.86                                        
   transpose_to_x          0.05     0.05                                        
   transpose_from_x        0.02     0.02                                        
   transpose_to_y          0.10     0.10                                        
   transpose_from_y        0.07     0.08                    


time=  0.01734(     0)  next output=*********  LSF minutes left:    -1. 0       
for next timestep: delt=0.0017043 cfl_adv= 1.500 cfl_vis= 0.005                 
max: (u,v,w)      0.82344867316324     0.85623639543220     0.86055051090769    
<z-vor>=-0.12174E-16   <hel>=-0.11408E-01   max(vor) 0.43619E+03                
R_lambda=   313.37306  R=290495.00349 lambda=     0.00691                       
mesh spacing/eta:        9.8435       9.8435       9.8435                       
spherical dealiasing kmax*eta:        0.0479                                    
eddy turnover time:        2.7761                                               
ke:  0.0365315377  enstropy:     7645.3726         total d/dt(ke):   0.0000000  
d/dt(ke) vis=  -0.0263184 f=   0.0000000 alpha=   0.0000000 total=  -0.0263184  



time=  0.03477(    10)  next output=  0.03477  LSF minutes left:    -1. 0       
for next timestep: delt=0.0017786 cfl_adv= 1.500 cfl_vis= 0.005                 
max: (u,v,w)      0.83086083344794     0.82621640130014     0.87612013435275    
<z-vor>= 0.30293E-16   <hel>=-0.11222E-01   max(vor) 0.41480E+03                
R_lambda=   290.86911  R=290495.00349 lambda=     0.00646                       
mesh spacing/eta:       10.1553      10.1553      10.1553                       
spherical dealiasing kmax*eta:        0.0464                                    
eddy turnover time:        2.4209                                               
ke:  0.0360904728  enstropy:     8661.1591         total d/dt(ke):  -0.0297827  
d/dt(ke) vis=  -0.0298152 f=   0.0000000 alpha=   0.0000000 total=  -0.0298152  



Random numbers on a 2x1x256:, run for 10 timesteps:
time=  0.01675(    10)  next output=  0.01675  LSF minutes left:    -1. 0       
for next timestep: delt=0.0017638 cfl_adv= 1.500 cfl_vis= 0.005                 
max: (u,v,w)      0.85318461175931     0.89334461353931     0.87389815907870    
<z-vor>=-0.10408E-16   <hel>=-0.48312E-01   max(vor) 0.42825E+03                
R_lambda=   316.42675  R=290495.00349 lambda=     0.00697                       
mesh spacing/eta:        9.8042       9.8042       9.8042                       
spherical dealiasing kmax*eta:        0.0481                                    
eddy turnover time:        2.8257                                               
ke:  0.0365933275  enstropy:     7523.9083         total d/dt(ke):  -0.0258968  
d/dt(ke) vis=  -0.0259003 f=   0.0000000 alpha=   0.0000000 total=  -0.0259003  
writing output files at t=    0.0168                                            


restart.* files generated with 1 1 256
restart.h5 with 1 1 256: pass
restart.h5 with 2 1 128: pass
restart.h5 with 2 1 256: pass

restart.* files generated with 2 1 256
(but restarting from a t=0 restart file) 
restart.h5 with 2 1 256: pass







**********************************************************************************
10/21/02
runs stored on /ccs/scratch/taylorm/cj

128^3

cj1  mu=1e-4   alpha=16h   power spectra starting to turn at tail

cj3  mu=25e-4  alpha=0     delx/eta = .94   too viscous. 
cj2  mu=10e-4  alpha=0     delx/eta = 1.9  killed at t=2.1  epsilon=3.6

cj12 mu=6.25e-4   NEXT
cj13 mu=1.5e-4  
cj14 mu=.4e-4     



cj4  mu=25e-4  alpha=6h  
cj5  mu=6.25e-4  alpha=6h    epsilon=1.1
cj6  mu=1.5e-4  alpha=6h  
cj7  mu=.4e-4  alpha=6h  

cj8  mu=25e-4   alpha=1h  
cj9  mu=6.25e-4  alpha=1h  
cj10  mu=1.5e-4  alpha=1h  
cj11  mu=.4e-4  alpha=1h  


cj15  alpha=0       mu=0.8e-4
cj16  alpha=1 delx  mu=0.8e-4
cj17  alpha=6 delx  mu=0.3e-3







**********************************************************************************
10/15/02



iso12w256A IN QA  up to t=88 so far
   oops: this run is really running at 512^3.  
 
   zero initial condition
   FM=5/(2pi)**2, mu=6e-4/(2pi)**2
   mu=1.5e-3/(2pi)**2 = 3.7995e-5 

   At t=13 changed  mu=6e-4/(2pi)**2 = 1.52e-5
                    epsilon=.15/(2pi)**2, which is too small. 

IN:
   at t=90 changed  FM = 18/(2pi)**2 
                    epsilon=  
   run to t=137, still running




iso12w250B     
 
   iso12 initial condition
   FM=5/(2pi)**2, mu=6e-4/(2pi)**2
   nu=1.5e-3/(2pi)**2 = 3.7995e-5 

   check to see if this run is isotropic?
   ran to t=200





**********************************************************************************
9/19/02
large alpha runs

Run:  spectrum peaked at k=8

      decay with alpha=inf, 0
      (need initial condition also peaked at 8, or start from
      on of our forced runs?)

Run:  forced, alpha=inf,1/8,1/16,1/32




FORCING: iso
iso_256B (QA)
   alpha=inf.
   mu=.25e-4      viscosity appears to be much to high
                  spectrum drops to 1e-2 after forcing (at k=9)
                  and remains flat for all k>9

iso_256C (QA)     didn't run.  
   alpha=.125
   mu=.25e-4

iso_256D (QA)     looks good: some -3 slope, too viscous?
   alpha=inf.
   mu=4e-4 

iso_256E (QA)       died -QA down.
   alpha=inf.
   mu=1e-4 






FORCING: iso12
iso12_250I    Bluemtn done
   alpha=inf
   mu=4e-4
iso12_250J    Bluemtn done
   alpha=inf
   mu=8e-4


iso12_256B (QA)  done
    alpha=infinity
    mu=1e-4

iso12_256C (QA)  
    alpha=infinity
    mu=.25e-4  
iso12_256D
    F = 1, .128
    alpha=infinity
    mu=.25e-4  
iso12_256E        ran to t=7
    F = 1, 4.5
    alpha=infinity
    mu=.25e-4  
iso12_256F        ran to t=50  
    decay case
    alpha=infinity
    mu=.25e-4  
iso12_256G        ran to t=5  
    alpha=1.0
    mu=.25e-4  
iso12_256H      
    alpha=.25
    mu=.25e-4  
iso12_256I      
    alpha=1/16 = .0625   ran to t=3.    Looks like iso12_256B
    mu=1.00e-4                          too viscous???

iso12_256J      
    alpha=1/16 = .0625   ran to t=4.2.  
    mu=2.75e-4  
    compare to iso12_256 from shankara.  

iso12_256K      
    alpha=1/64 = 4 delx  ran to t=6
    mu=2.75e-4  

iso12_256L      
    alpha=1/256 = 1 delx  IN
    mu=2.75e-4  


TODO:
print spec?.ps on secure
print spec3.00.ps on certs.




**********************************************************************************
7/7/02

ISOW tuning runs.

mu=1.35e-3
forcing in wave numbers 1&2, or 2&3,
tuned so that epsilon=.5
R_l and E are too low when compared to Gotoh's results.

G = ||f|| L^3 / mu^2  =  epsilon^.5/mu^2 

                                    
  mu      epsilon   ke     R_l      241*eta         G  (L^3/T^.5 = 1e-6)
1.35e-3     .09    .08      20
1.35e-3     .27    .22      29
1.35e-3     .55    .30      29        2.0            .4M

.75e-3      .5      .5      65         
.25e-3      .5      .6     132                       11M

1.35e-3/36  .55/36   ?     130         .32           83M  (Gotoh)






ke  .215
R_lambda = 50.0    lambda = 50*mu/sqrt(2 KE) = .103 
mu = 1.35e-3
delx/eta = .803   eta=1/(.803*128) = .00973


lambda/eta = 10.5

lambda/eta =   sqrt(10 KE mu /epsilon)   (mu^3/epsilon)^-.25
           =   sqrt(10) KE^.5  mu epsilon^-1  mu^-3/4 epsilon^.25
           =   sqrt(10) KE^.5  mu^1/4 epsilon^-3/4 









**********************************************************************************
7/1/02
new isotropic runs

Gotoh resolution criterion:  kmax * eta > 1/2pi
works out to be:  delx/eta <= 3
so lets run with delx/eta = 2?  


       

dealiasing:  fft-sphere 


iso12_250A  ran to t=10.  
iso12_256A  ran to t=11.

    iso12 forcing:  k1=.5   (forcing disabled if it removes energy)
                   k2=.5
    mu=1.35e-3:  delx/eta=1.0, R_l=60   epsilon=4   G=1M


iso12_256 (shankara) forcing, k1=.5, k2=.5 
   /ccs/scratch/taylorm/dns:

   mu=1.25e-3    [0.0,0.75]     delx/eta=.77  next?                 epsilon
   mu=4e-4       (0.75,1.25]    delx/eta=2.0     4/5 law:  .743
   mu=2e-4       (1.25,1.50]    delx/eta=3.46    4/5 law:  .6875
   mu=3e-4       (1.50,1.75]    delx/eta=2.48    4/5 law:  .675
   mu=2.75e-4    (1.75,3.5]  t=2.25      2.64              .69      4.32
                               2.5       2.56              .68      3.84
                              2.75      2.58              .79      3.97
                              3.00      2.70              .64      4.74
                              3.25      2.52              .70      3.60  


iso_256A  (Qsc)
   iso forcing.  k**4 in wave numbers up to 9
   mu=1.35e-3 delx/eta=1.73  epsilon=95    G = 5M
   R_l=30



G = ||f|| L^3 / mu^2  =  epsilon^.5/mu^2  


iso12_500A    iso12 forcing:  k1=.5  (forcing disabled if it removes E)
                              k2=.5
               
        t=[0,1.13]:  mu=3e-4  R_l=140  delx/eta=1.2  epsilon=3.70 
        t=[1.13,4+]:  mu=1e-4  R_l=252  delx/eta=2.8  epsilon=3.80 
                t=5.56   4/5 law max:   .7551
                t=5.0                   .7338
                  4.57                  .717
                  4.00                  .807
                  3.00                  .768



iso12_512 (ON O3K)   done
   t=0...5  mu=2.75e-4
   t=.5 to 3.7  mu=1e-4
   t=3.5 ->     ran on QA.  
   so data after 3.7 switches to little endian
   (scalars switches at 3.5)





 
iso12w_512A    mu=6e-4/(2pi)**2   FM=15/(2pi)**2  

               Run to t=2.9:   R_l = 260
                               epsilon = -.0383  = 1.51/(2pi)**2   
                               delx/eta = 3.5

               epsilon to large, lowering FM.  

               FM=5/(2pi)**2 for runs starting at 2.92:  
               IN    R_l=250  delx/eta=2.37  epsilon=.00763 = .3012

               t=40.  4/5 law max:  .744
                 35                 .7511
                 30                 .779 
                 25                 .7612
                 20                 .7484
                 15                 .7695

iso12w_512B
   in QA
   same as  iso12w_512A, but with zero initial condition
   FM=5/(2pi)**2, mu=6e-4/(2pi)**2




i12_1024A run at mu=.35e-4  IN




iso12_640    mu=.6e-4 on guyot?
    1x1x320  IN this weekend?    (lower iso12_256 to 128 cpus???)
    stopped because I was kicked off guyot



FUTURE RUNS:
    as above, but using dnsgrid?
     dnsgrid with lower-tol CG?



     256:  2.75e-4
     500:  1.00e-4
     640:   .7e-4     delx=2.7  push this a little with mu=.6
     768:   .53e-4
    1024:  0.35e-4  



  












**********************************************************************************
6/28/02
KH with thin sheet for Chris Brislawn

CFL = 1.45   
mu=5e-5  (value)
KH-anal
subtype=0
fft-sphere

output: every t=2







**********************************************************************************
6/14/02

new iso12 forcing:
force so shells 1 and 2 each  E=.5

iso12w:  white noise, Gotoh stile forcing, with F(1)=F(2)=5

KE at t=0: 1.5
Gotoh: KE 1.7, epsilon=.5


              mu      forcing    KE   epsilon   R_l    h/eta   turnover
iso12-256a   1.35e-3    iso12    1.7    3.8     100     .8
iso12-256b   1.35e-3    iso12w   .45     .5      75     .5
(data at t=10)





**********************************************************************************
4/24/02
vxpair runs on autry, milkyway

stored in: /ccs/scratch/taylorm/vxpair (16Gb)
and: ~/vxpair  (9Gb)



6144x3072:  mu=2e-8 a touch noisy, goes away.
            mu=4e-8 ok?
            using delx goes like eta goes like mu^3/4 rule:  
              (4e-8)^(3/4)*6144 = mu^(3/4) * N
              .0174/N = mu^3/4           mu = Ref_mu* (6144/N)^(4/3)

            mu = 1e-8:  N = 17400.  

Formula:     mu ~ N^{-4/3}        mu ~ N^-2            good values  bad value
16384x8192   mu = 1.1e-8         5.6e-9
12288x6144   mu = 1.6e-8         1e-8
6144x3072(ref)mu = 4.0e-8        4e-8                       4e-8       2e-8 
4096x2048    mu = 6.9e-8         9e-8                       1e-7       7e-8
3072x1536    mu = 1.0e-7         1.6e-7 
2048x1024    mu = 1.7e-7         3.6e-7                     4e-7       2e-7

Results:
6144x3072    mu=1e-7 ok.    2e-8: a touch noisy, goes away
3072x1536    mu = 1e-7 ok.  tiny noise on leading edge.  goes away t=55

2048x1024
./gridsetup.py 1 1 1 2048 1024 1 2 2 0 2 2 0
initial condition subtype=1
mu formula above suggests:  mu=1.7e-7
make dnsvor

vx2048a   vx2048a.inp   mu=6e-8  very noisy at t=50
vx2048b   vx2048b.inp  mu=1e-7   noisy at t=49
vx2048c   vx2048c.inp  mu=2e-7   small amount of noise on leading edge at t=50
                                 reduced by t=55
vx2048d   vx2048d.inp  mu=4e-7   looks good


vx4096a                mu=1e-7   done, looks good
vx4096b                mu=7e-8   extremly small amount of noise at t=50
1
                       mu=4e-8   save, conservative choice?
vx6144a                mu=3e-8   looks good - but if you zoom in 
                                 there is a microscopic amount of noise.
vx6144b                mu=2e-8   a touch noisy, goes away




**********************************************************************************
2/20/02


**********************************************************************************
2/12/02

milkyway runs
VXPAIR case
init_cond_subtype==1  
(onesided/inflow for w, PSI fixed for all t )
3072x1536  
mu=1e-7

new code with tracers!
RUNNING 
vx3072


mu=2e-8.  a touch noisy in one snapshot that I saw, went away.  
6144x3072    2 cpu milkyway:  338m per t=1.  

if we use mu^3/4 rule, new grid:  10332x5000.  So lets go with 12288x6144.

12000x6000  t=.05
120 cpus
BlueMtn:  
120x1:      9.91
30x4:      10.31

Benchmarks for 12288x6144:   RES size: 5.7GB

ASCI Q    t=.05    t=1 (extrapolated)   t=150
cpus      
2x1       39.05 
4x1
8x1
16x1
32x1      20.02

64x1       9.84     3.28h                20.5d  
32x2      10.77
16x4       9.58
8x8       11.44
16x2      12.02

128x1      4.89    1.63h                 10.2d

256x1      3.29
128x2      3.40                           7.1d
64x4       2.79/3.08                      5.9d
32x8       3.03


128x4      1.63    .54h                   3.4d


**********************************************************************************
1/18/02
VXPAIR case timings
init_cond_subtype==1
mu=1e-4
w=0, cutoff=0, bito_savart init only

2049x1025 autrey                     t=15: 508min     3.5d for t=150

3072x1536 milkyway 2x1    t=.1  4.29      t=15  (607m)  vx3072_
3072x1536 milkyway 2x1                    t=15 (1700m)  vx3072_onesided_
3072x1536 autrey   2x1    t=.1  6.67      t=15 (1337m)  vx3072b



milkyway:
4096x2048 milkyway    t=.1: 19.68m
                             8.19m (4 cpus 4x1)
                            11.52m ( 2 cpus 2x1)
                             8.48  ( 4 cpus 2x2)


BlueMtn  
6400x3200 25x5      t=.01 .67m    t=.1:  3.13m  t=.2: 6.08min
8000x4000 125x1     t=.05  3.25                                  6.7d for t=150
8000x4000 25x5      t=.05  3.36             
8000x4000 5x25      t=.05  3.56





6  arrays, 3 variables, 8  bytes each:   6*3*8*
(actual resident size about 50% smaller because dnsvor does not use all arrays)
32768*16384 = 70.4G
16384x8192  = 17.6G    
8192x4096  = 4.4G    
4096x2048  = 1.1G
3072x1536  = .729G    wont run on autry, 1 cpu.  
2048x1024  = .3G    
     


**********************************************************************************
1/17/02

milkyway runs
VXPAIR case
init_cond_subtype==1
3072x1536  
mu=1e-7

vx6144b_*
   b.c.: w=0/onesided, PSI fixed
   mu=2e-8
   IN 2 cpus milkyway
   t=15 estamated:  88h  3.67 days.  finished monday night?



vx3072_*
   b.c.:  w=0, PSI fixed 
   2 cpus  t=15 in 661m


vx3072_onesided_*
   b.c.:  w=0/onesided,  PSI recomputed every 5 timesteps
   2 cpus  t=15:  1700m


vx3072b_
   b.c.:  w=0/onesided, PSI fixed 
   1 cpus t=15  1337m (autrey)





**********************************************************************************
1/2/02

summary of ISO12 250^3 runs.
subtype=0:   tau (forcing relaxaction coefficient) = 5


        mu    tau    R_l   h/eta    turnover    epsilon   xyz-spec      R-spec
250   .1e-3    5     347   4.04      1.53        1.04      vear 1e-1     N/A
250E  .1e-3   25     513   5.20      1.36        2.87      vear 1e-1 
250F  .1e-3  500     529   5.34      1.33        3.18      vear 1e-1

250B  .2e-3    5     241   2.41      1.49        1.05      hookup        N/A
250C  .4e-3    5     167   1.44      1.44        1.07      hook 1e-3     N/A
250D  .8e-3    5     114   .850      1.41        1.05      hook 1e-6     N/A
250G  .8e-3   500    178   1.14      1.23        3.39      hook 1e-4     good
250H  5000h   500    668   7.16/1.42 1.42        2.95

250I  .8e-3   500    180   1.13      1.27        3.23      same as G, with new diags
      continuing...  with time averages.. done up to t=40
      continuing...  with transfer function t=40 up to 50.  

250J  .8e-3   500   (same as G, but with 4th order) done up to t=14
    


500    .1e-3    5     455   2.38      1.44        2.00     hook 1e-2     kink
500B   .1e-3  25 (stopped)
500C  1.35e-3 500     IN.  run 10 eddy turnover times to check isotropy
                           with more data then 512 run below.  


512    1.35e-3  500   131    .37      1.22        3.14
512c   1.35e-3  isow   72   .21       2.17         .30
             IN  run 10 eddy turnover times to check isotropy.  with isow forcing
512d   same as 512c, but with F(1)=F(2)=5.  IN
       code was changed on bluemtn, so this F scaling will be lost
       next time we do a pulldns

   

Energy:
250   1.31 down to .76
250E  1.31 up to 2.24
250F  1.31 up to 2.37

250D  1.31 down to .71
250G  1.31 up to 2.22

500   1.31 to 1.44






**********************************************************************************
12/12/01
shallow water runs

mu_hyper = 5000

sht/rune_5000_    t=11.5   
sht/rung_5000_    t=10   done






**********************************************************************************
12/04/01
iso12_250D_

iso12 initial condition
iso12 forcing  (subtype=0:  tau=5)
CFL=1.5/.25
mu=.8e-3  

IN

**********************************************************************************
12/04/01
iso12_250C_

iso12 initial condition
iso12 forcing  (subtype=0:  tau=5)
CFL=1.5/.25
mu=.4e-3  



**********************************************************************************
11/30/01
iso12_250B_

iso12 initial condition
iso12 forcing  (subtype=0:  tau=5)
CFL=1.5/.25
mu=.2e-3  

same as iso12_250_, but with mu 2x larger

R_l = 241
h/eta= 2.41
eddy turnover time: around 1.4
epsilon: about -1.0

4'5 law for delta=32h:   .5954   std=.0879





**********************************************************************************
11/28/01
iso12_500_

iso12 initial condition
iso12 forcing  (subtype=0:  tau=5)
CFL=1.5/.25
mu=.1e-3  

.1 done
looks like we can do t=.4 in one 720min run ????
IN now. but check if .4 will really run


**********************************************************************************
11/28/01
iso12_250_

iso12 initial condition
iso12 forcing  (subtype=0:  tau=5)
CFL=1.5/.25
mu=.1e-3  

a little under-resolved:
data average from t=5..11:    
R_l = 347 
h/eta = 4.03 

eddy turnover time: about 1.6
epsilon:  about  -1.0

Times:
we can do t=6 in one 720min run.  
0..11   done







**********************************************************************************
11/17/01

IMPULSE runs
../src/impulse/*
KH run with thick shear layer from E and Liu paper
run to time 1.5

kh0     dns (projection method)
kh1     dnsgrid

kh12    NS-alpha  alpha=.5h??       .00390625
kh11    NS-alpha  alpha=1h          .0078125
kh4     NS-alpha  alpha=2h               
kh10    NS-alpha  alpha=4h       
kh9     NS-alpha  alpha=8h    
kh8     NS-alpha  alpha=32h   


TOPHAT
kh13     NS-alpha alpha=2h  (width 10 points)   ifilt=5
kh14     NS-alpha alpha=4h  (width 20 points)   ifilt=10   
         NS-alpha alpha=4h  (width 20 points)   ifilt=5    bad
kh15     NS-alpha alpha=4h  (width 20 points)   ifilt=20   


GAUSSIAN
kh16     NS-alpha alpha=2h  ifilt=7       dk/dt seems good, check plot
kh17     NS-alpha alpha=4h  ifilt=15     dk/dt seem ok, check plot

JACOBI  error: 10%  (about 40 iterations)
         NS-alpha alpha=4h   fixed 10 iterations   unstable
kh20     NS-alpha alpha=4h   fixed 20 iterations   residual: .25
kh19     NS-alpha alpha=4h   fixed 80 iterations   residual: .03
kh18     NS-alpha alpha=4h   fixed 40 iterations   residual: .13

kh21     NS-alpha alpha=2h   fixed 40 iterations   residual: .13

rerun with tolerence?


CG
kh22     NS-alpha, alpha=4h  tol=.05d0  (about 10 iterations???)
                                        looks shitty
kh24     NS-alpha, alpha=4h  tol=.03d0  t=.5 ok, t=.75 bad  (about 20 iterations)
kh23     NS-alpha, alpha=4h  tol=.01d0  looks nice, about 30 iterations




kh2     impulse method.            crashes at t=.41
kh3     impulse-alpha   alpha=2h   crashes at t=.77
        impulse-alpha   alpha=2h CFL=.25  crashes at t=.77

kh5     impulse-alpha alpha=3h     crashes at .80
kh6     impulse-alpha alpha=8h     crashes at .9953
kh7     impulse-alpha alpha=32h    crashes at .507   time step problem?






**********************************************************************************
10/30/01

KH runs.  
autrey
src/kh

These runs were made to study a problem in the 1024x1024 KH
results.  Initial results looked great but were not symmetrical.
Noise at around t=.20 (which was then dissapated) triggered the
asymmetry.  The noise turned out to be caused by CFL.

Two possible fixes: lower CFL fixes problem.  Higher viscosity
does not fix problem.

1. lower CFL:
with mu=2.5e-5   CFL = 1.5:   noise triggers asymetric rollup
                 CFL = 1.45:  symmetric rollup


2. Increase viscosity?
mu=5e-5         same.  CFL=1.5 triggers assymetic rollup
                       CFL=1.45 ok



khN  1024x1024  mu = 2.5e-5    CFL: 1.50/.25   looks good.
     4th order method.  

kh0  1024x1024  mu = 2.5e-5    CFL: 1.50/.25  
     4th order method with new second derivative




khL  1024x1024  mu = 5.0e-5    CFL: 1.5/.25   Noise at t=.25
                                              KE dissapation does not match
                                              at t=.15 
                                              cfl_vis has no effect above .15
                                             
kkM  1024x1024  mu = 5.0e-5    CFL: 1.45/.25  looks good.





kh  1024x1024  mu = 2.5e-5    CFL: 1.5/.25   asymetric answer.  CFL, or resolution?
                                             cfl_vis has no effect above .073
                                             rerun?

khI 1024x1024  mu = 2.5e-5    CFL: 1.50/.25  repeat kh run
                                             check scalars as progressing
                                             yes - can see unstable at .25

khK 1024x1024  mu = 2.5e-5    CFL: 1.45/.25  looks great at t=1.0
khJ 1024x1024  mu = 2.5e-5    CFL: 1.40/.25  looks great at t=1.0
khH 1024x1024  mu = 2.5e-5    CFL: 1.25/.25  looks great at t=1.0
khG 1024x1024  mu = 2.5e-5    CFL: .75/.25   looks great at t=1


khD 512x512    mu = 2.5e-5    CFL: 1.5/.15   looks great at 1.0
                                             (cfl_vis has no effect above .03)

khE 256x256    mu = 2.5e-5    CFL: 1.5/.15   secondary vortex forms t=.75
khF 256x256    mu = 2.5e-5    CFL: .75/.15   same as above.


VIS CFL test:
128x128    mu=.003    1.5/.75                unstable at t=2
128x128    mu=.003    1.5/.70                unstable
128x128    mu=.003    1.5/.60                stable  
128x128    mu=.003    1.5/.50                stable








**********************************************************************************
10/30/01

Re scaling runs, using iso12 initial condition and forcing.
out to t=8.  


32^3  
n32_200  kediss(2/3)=200  e=2.05   R_l = 35   
    very smooth, steep decay
    h/eta=1.47

n32_100  kediss(2/3)=100 e=-1.74  R_l = 63
   sperhical spectrum looks good
   x,y,z become greater thatn -5/3, but not level
   h/eta=2.47
   
n32_50   kediss(2/3)=50  e=-2.1   R_l = 88
   sperhical spectrum looks good
   x,y,z ok except for last coefficient (becomes level)
   h/eta=4.2

n32_25   kediss(2/3)=25  e=-2.14  R_l = 131
    hook in spherical spectrum
    x,y,z become greater thatn -5/3, but not level
    h/eta=6.9
        


64^3 
n64_200 kediss(2/3)=200  e=-1.95  R_l=92    KE=1.23   cpu: 123m autrey
        spherical looks good
        x,y,z has hook
        h/eta=2.06

n64_100 kediss(2/3)=100  e=-1.86  R_l=144   KE=1.34   cpu: 130m mahi
        spherical looks good
        x,y,z has hook
        h/eta=3.5

n64_50  kediss(2/3)=50   e=-2.01  R_l=202   KE=1.38   cpu: 145m mahi
        spherical has hook
        x,y,z perfect -3/5, level off at end.
        h/eta=5.83
        




n128_400  kediss(2/3)=400 e=-.93    R_l=109  KE=.71  cpu: 61m  (nirvana 64)
    very smooth, steep decay
    h/eta=1.48

n128_200  kediss(2/3)=200 e=-1.06   R_l=154  KE=.76  cpu: (71m nirvana 64)  
    spherical looks good.  
    x,y,z hook up.
    h/eta=2.5

n128_100  kediss(2/3)=100 e=-1.03    R_l=225 KE=.78   cpu: 134m
    spherical:  ok except for last wave number hooks up.  
    x,y,z: hook up
    h/eta=4.2



256^3  
iso12_256_200  kediss(2/3)=200 e=-1.00  R_l=325  KE=.78  mu=?
h/eta = 1/(256*eta) = 3.63
     spherical looks ok, but in >5/3 region has a < 5/3 region (not level)
     x,y,z: hook up



diffusion formula: 

kmode(256)= 148        mu = kediss(2/3) / 1.72e6
kmode(128)=  74        mu = kediss(2/3) / 4.31e5
kmode( 64)=  37        mu = kediss(2/3) / 1.08e5
kmode( 32)=  18        mu = kediss(2/3) / 2.70e4

eta = (mu^3/e)^.25





**********************************************************************************
10/24/01

Memory leak on Q?

forcing: none
initial cond: Q=0, projection disabled

                               formula    obs
4 cpu running 256x256x256        603      crashes with auto arrays
                                         newcode: 603M, runs!






**********************************************************************************
10/8/01 
64^3 decaying turbulense
tag: temp1  output: temp1.out in temp1 directory

tag: temp2  output: temp2.out in src directory

check these two runs: structure functions shoold be the same.
second run should have epsilon structure function




**********************************************************************************
8/22/01 KH 384x384x384 parallel benchmark runs on SGI 128cpus.

pbench.job
input: benchmark1024.inp  
(cfl = 1.5/.25  vis=2e-4, t_final=.002)


SGI FFT (2dM)
1 message at a time

1x1x128
4x4x8
1x8x16



**********************************************************************************
8/9/01  KH 1024x1024 

mu = .0002/8 = 2.5e-5
CFL = 1.5
run to time=3.  Looks good.  







**********************************************************************************
8/7/01  More 128x128 runs.  

128x128 can handle mu=.0002 to t=1.  What happens if we run longer?

KH inintial condition:

4th order:

CFL=2.0   t=4 noisy, but just two large blobs
CFL=1.9   t=4 looks good, t=10 is noisy
CFL=1.8   t=10 ok, t=20 noisy
CFL=1.7   t=20 ok, t=30 noisy.
CFL=1.65  goes bad at t=47! 
CFL=1.6   t=4 ok, t=10 ok, t=30 ok, t=50 ok
CFL=1.5   t=4 ok, t=10 ok, t=30 ok, t=50 ok
CFL=1.0   t=4 looks good, t=10 looks good.  two large blobs


3rd order:

CFL=1.5   t=1 looks bad.
CFL=1.25  goes bad around t=22
CFL=1.20  t=50 looks good.  
CFL=1.125 t=50 looks good.n
CFL=1.0   t=50 looks good.

4th order cost: 4/1.6 = 2.5            
3rd order cost: 3/1.20 = 2.5

So for this problem, might as well use rk4.




**********************************************************************************
9/29/01  CFL and viscosity test

128x128 Kelvin Helmholz initial condition.
How much viscosity is needed to keep solution smooth?


mu=.00001   cfl=.25   noisy at t=1
mu=.00005   cfl=.25   ?
mu=.0001    cfl=1.70  smooth, round vortex with 2 filiments at t=1

mu=.00005   128x128 does not look like 256x256.   (cfl=1.0)
mu=.0002    128x128 does look like 2565x256       (cfl=1.0)

So, 128x128 can resolve a viscosity of .0002 out to t=1.0,
but it cannot resolve a viscosity of .00005

Now test CFL, using the "looks good norm, at t=1.0"

CFL rk4
3.0   vorticity looks bad
2.5   vorticity looks bad
2.2   vorticity looks bad
2.1   vorticity looks good
2.0   vorticity looks good - same as 256x256 result
      running past t=1? 

CFL rk3  (1.5 rk3 = same cost as 2.0 rk4)
2.0   bad
1.5   bad
1.4   some bad oscillations
1.35  looks good
1.25  looks good
1.0   looks good

Result: rk4 is more efficient.

What about looking at energy spectrum, or structure funtions?



**********************************************************************************
9/28/01  CFL and viscosity test

CFL:  128x128

dealiased, vis=0
cfl_adv
2.0   t=.5 bad - streaks of vorticity off of sheet
      but stable so far (1200 time steps, t=7)
1.90  t=.5 bad, not as bas as t=2.0
1.80  t=.5 ok
1.75  t=.5 ok
1.50  t=.5 ok
1.15  t=.5 ok
1.00  t=.5 ok


dealiased, vis=.0001
2.0:  t=.5 bad - smoother, but still has streaks of vorticity off of sheet
      t=1.0  oval vortex + two filiments - outer filiment has oscillations
    
1.70  t=.5  looks good - much smoother than vis=0
      t=1.0 looks good - round vortex + two filiments with no oscillations

1.00  t=1.0 looks good - round vortex + two filiments with no oscillations




