Outline of steps required to compile and run the CCS-2 DNS code:

1.  set up the grid dimensions
2.  compile the code
3.  run 
4.  analysis of output




Step 1.
Set up the grid dimensions.  

I use a python script, 'gridsetup.py' which will create the
needed 'params.h' file.  Here are some examples:

      To setup for a 64x64x64 grid, on 4 cpu:
      (parallel decomposition: 1x1x4, so 4 hyperslabs in the z-direction)

      % cd dns/src
      % ./gridsetup.py 1 1 4 64 64 64 


      And a 32x32x32 grid, to run using just 1 cpu:

      % cd dns/src
      % ./gridsetup.py 1 1 1 32 32 32

If you do not have python installed on your system, you can
instead copy the file 'params.h'test' to params.h' and then
edit params.h by hand.  By default, it is set up to run a 32^3
simulaiton on 1 cpu.


Step 2.
Compilation

A makefile is included which should run on Linux, SGI, OSF1 (Compaq)
AIX and SunOS.  On Linux, the makefile by default used the Intel F90
compiler, but you can edit the file and switch this to Lahey or PGI.
For the other systems, it uses the vendor supplied F90 compiler.

To build the code on one of the above systems, just run:

      % cd dns/src
      % make


Compiling the code on Windows using Visual Studio and Intel Fortran 90:
      I haven't done this yet, but it should be possible.
      I think these options need to be added in various configuration
      pull down windows:

      Intel fortran compiler options:  -Vaxlib -w90 -O1 -tpp7
      Preprocessor options:   -DLINUX -DUSE_FFT99




Step 3.
Running the code.

    To run the code on a single processor:

        ./dns  -i forcing12.inp output_name  

    using the input file 'forcing12.inp'.  This runs a triply 
    periodic forced turbulence problem.  The forcing is in
    wave numbers 1 and 2.  It should reach equilibrium at time 
    t=.75, with an R_lambda=37.  

    Each snapshot is in a file named:

        output_name0000.0000.u         u component of velocity
        output_name0000.0000.v         v component of velocity
        output_name0000.0000.w         w component of velocity

        output_name0000.0000.spec      power spectrum (1D and spherical)
        output_name0000.0000.spect     transfer spectrum
   
        output_name0000.0000.scalars         KE, dissipation rates, etc...
        output_name0000.0000.scalars-turb    skewness, other scalars...

    where 0000.0000 is the time of the snapshot.  So for t=0.25,
    the filename would be:  output_name0000.2500.u.



Step 4.
Looking at the data.

Not yet documented - contact Mark Taylor (mataylo@sandia.gov) for help.

There are matlab scripts in the dns/matlab directory for
reading and processing all the output produced by the code.

Some more complex analysis, such as computing structure
functions and PDFs is done with fortran programs in the dns/src
directory.  
















