E&Liu KH problem.  
       mu=0:  at t=1, E is down .25e-6.  dk/dt = -1.25e-6
       mu=1.5e-6 at T=1  E is down 1.2e-4 and  dk/dt = -1.26e-4
       1e-5:  noisy
       1e-4:  a touch noisy
       2e-4: looks good, a little too smoothed 



1. change NS-alpha so forcing always appears as just 'f'
   see nots about ints(3) and ints(9) in params.F90

1. matlab code: 
       last have averages: 
          epsilson
          t_eddy
          h_eddy
       compute all momements, with std and error bars

1. 4th order code using ghost cells:
         consctruct 4th order test case with dnsgrid
         write ns_ghost, testing agains above
         
2. streamfunction-vorticity 2d code  
3. benchmark FD + transform with different decomposisitons
4. construct convergence test for KH 1024 problem
      compare with spectral, 4th, 4th+1st order grad, or 1st order div


1. if run stops because u>1000, timings are incorrect
1. specplot: multiply by f^5/3
1. check restart testcase on mahi (also little endian)
2. make suite of runs for diffusion: 32^3, 64^3 128^3 256^3
       plot R_lamba vs mu and h

1. switch 3d test case to different dimensions


check spectrum and rotated spectrum  (scalar)  ok for short times.
check spectrum and parallel spectrum.  using testcase?

10. use a mpi defined type for the buffer->2d array copy in transpose.F90
100. post more messages at once in tranpose.F90?  
101. divergence: go to Shashkov formula?  

**********************************************************************************
S. Chen run:
513^3  R_lambda=220
25 values of r
holds for r=80..180



**********************************************************************************

Q: 512x512x256: formula                 288Mb per cpu
                observed:               334M

1 cpu:       formula    observed
514x514x10    362         385
130x130x130   301         326   

**********************************************************************************
sizes
Nirvana:  32Gb per box.  optimal is 225M per CPU.  
          1 box: 29Gb,  max size: 600
          2 box: 58Gb.  max size: 760 
          4 box: 116Gb  max size: 950

QidSE:  16x4 cpus.  64Gb memory
Qid:   128x4        512Gb memory


Linux box sizes:          3D array size: 3*8*n**3.  5 big arrays per run.
                                                    total size about 6 arrays
 64^3     38M            6M per array
 96^3    120M            20M per array, 100M total.  
128^3    281M            48M per array

extrapolated:
256^3   2.25Gb           .375M per variable
480^3:  15Gb
512^3:  18Gb             3Gb per variable  (9GB per timestep.  4.5gb   130m gridpoints
1024^3  144Gb            24Gb per variable                             1b gridpoints
2048^3  1152Gb           192Gb per variable      
4096^3  9216Gb           1536Gb per variable      



t=-43  (.05)                         Nirv    BlueMtn       10eddy
one box timings:  256 on 32 cpus             > 15min       
                  256 on 64 cpus     9.11m    8.32        
                  256 on 128 cpus    7.65m    4.11m       
                  250 on 125 cpus    7.65m    3.98m       

                  400 on 5x1x25              27.03m
                  400 on 1x100               32.09m



t=-4  (5 time step)                     Nirv Bmtn   Q       8K timesteps
                  512^3 on 32 cpus:                 12.43    13.8d
                  512^3 on 64 cpus:                  5.07    5.6
                  512^3 on 128:                      2.54    2.8
                  512^3 on 256:                      1.22    1.4
                  500^3 on 500:                      0.94    1.0
                                                    
                  500^3 on 125 cpus:         4.30             4.7d
                  512^3 on  64 cpus:         9.66             10.7
                  512^3 on  32 cpus:        25.0              27

                                                            16K timesteps
                 1000^3 on 500 cpus:                 5.64    13d
                 1024^3 on 256 cpus:                  ?


 
t=-19 (20 time steps)                   Nirv Bmtn  Q        4K timesteps
                  256^3 on 32 cpus:                5.72m    19h
                  256^3 on 16 cpus:               10.52m    
                  256^3 on  8 cpus:               18.97m  


                  256^3 on 128 cpus:     6.89  3.97(how many timesteps???)
                                            check bluemountain output files



**********************************************************************************
Spectral Model 1 CPU timings.
1 CPU  96^3  120M  
*****************************************************************
./bench.sh 96
run 5 timesteps.  CFL=1.5/.25, no structure functions

darkstar (linux 1Ghz)
PGF90, FFT99, auto       2.90  2.90    
PGF90, FFT99, params     2.86  2.87


PGF90,FFT99, auto            1.16  1.15
IFC,FFT99, auto              1.07  1.07
IFC,FFT99, params            1.05  1.07
LF90,FFT99, auto             1.28  1.27

autrey (linux 1.? Ghz ) 
PGF90,STK2+PGCC, auto        1.41  1.40

PGF90,STK2+GCC, auto         1.53  1.53
IFC,STK2+GCC, auto           1.45  1.45
LF90,STK2+GCC, auto          2.01  2.01


Nirvana SGIFFT                2.92  2.92  2.93  2.94
Nirvana FFT99                 2.97  2.97  2.97
Nirvana STK                

Truchas (Compaq ES40)
FFT99,params                 1.03   1.03
CPQ,params                   1.00   1.00

STK2,auto                    1.07   1.07
FFT99,auto                   1.03   1.03
CPQ,auto                     0.99   0.99

*****************************************************************
1 CPU  512x512x1


*****************************************************************



**********************************************************************************
analytic CFL:  for RK4, norm(G)<2.4

dealiased:  k=KMAX*(2/3) = N/3 = 1/(3delx)


advection:  G = i 2pi  (u,v,w)dot(kx,ky,kz) delt  
            |G| <= 2pi/3 delt ( U/dx + V/dy + W/dz)

    (U/dx+V/dy+W/dz) delt <= 2.4 3 / 2pi = 1.15


diffusion: G = mu 4 pi^2 (kx^2 +ky^2 + kz^2)  delt
             = mu (4/9) pi^2 delt (delx^-2 + dely^-2 + delz^-2)

      mu delt (delx^-2+dely^-2+delz^-2)  < 2.4 (9/4) / pi^2  = .55

.70: unstable
.60: seems stable.  lets go with .55



**********************************************************************************
